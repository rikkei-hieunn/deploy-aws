service:
  golangci-lint-version: 1.44.2
run:
  deadline: 5m
  skip-dirs:
    - tools
    - test
  skip-files:
     - usecase/start_task/service.go
     - usecase/load_config/service.go

linters:
  disable-all: true
  enable:
    # confirm linter list here: https://golangci-lint.run/usage/linters/
    - bodyclose
    - deadcode
    - dogsled
    - errcheck
    - funlen
    - gocognit
    - gocritic
    # should run go fmt ./...
    #- gofmt
    # Replaced by revive
    #- golint
    - gosimple
    - govet
    - ineffassign
    - lll
    - gosec
    - misspell
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    # add new from version 1.39
    - gomoddirectives
    # add new from 2021/02 version (1.38)
    - durationcheck
    - revive
    - wastedassign
    - importas
    - nilerr
    - forcetypeassert
    # add new from 2021/01 version
    - predeclared
    # still buggy
    #- ifshort
    # add new from 2020/12 version
    - forbidigo
    - makezero
    # target test helper only - disabled since there is no test helper
    #- thelper
    # add new from 2020/11 version
    # target test parallel only - disabled since there is no test parallel
    #- paralleltest
    # add new from 2020/10 version
    # This linter is meant to be used only for special cases. It is not recommended to use it for all files in a project
    #- exhaustivestruct
    - errorlint
    # target test parallel only - disabled since there is no test parallel
    #- tparallel
    #- wrapcheck
    # add new from 2020/09 version
    - nlreturn
    # may duplicate with goimport
    #- gci
    # before 2020/09 version
    # stricter format than gofmt
    #- gofumpt
    - nolintlint
    - nestif
    # check for the last dot of a sentence in comment
    #- godot
    #- gomodguard
    # check for non-ascii in source code (Japanese typo for example -> compile error)
    #- asciicheck
  fast: false

linters-settings:
  errcheck:
    check-type-assertions: false
    check-blank: false
  govet:
    check-shadowing: false
  golint:
    min-confidence: 0
  gofmt:
    simplify: true
  maligned:
    suggest-new: true
  misspell:
    locale: US
  lll:
    line-length: 160
    tab-width: 1
  funlen:
    lines: 100
    statements: 40
  unused:
    check-exported: false
  unparam:
    algo: cha
    check-exported: false
  gocritic:
    enabled-checks:
      - appendCombine
      - argOrder
      - assignOp
      - badCond
      - boolExprSimplify
      - builtinShadow
      - captLocal
      - caseOrder
      - codegenComment
      - commentedOutCode
      - commentedOutImport
      - defaultCaseOrder
      - deprecatedComment
      - docStub
      - dupArg
      - dupBranchBody
      - dupCase
      - dupSubExpr
      - elseif
      - emptyFallthrough
      - equalFold
      - flagDeref
      - flagName
      - hexLiteral
      - indexAlloc
      - initClause
      - methodExprCall
      - nilValReturn
      - octalLiteral
      - offBy1
      - rangeExprCopy
      - regexpMust
      - sloppyLen
      - stringXbytes
      - switchTrue
      - typeAssertChain
      - typeSwitchVar
      - typeUnparen
      - underef
      - unlambda
      - unnecessaryBlock
      - unslice
      - valSwap
      - weakCond
      - yodaStyleExpr

      # Unused
      # - appendAssign
      # - commentFormatting
      # - emptyStringTest
      # - exitAfterDefer
      # - ifElseChain
      # - hugeParam
      # - importShadow
      # - nestingReduce
      # - paramTypeCombine
      # - ptrToRefParam
      # - rangeValCopy
      # - singleCaseSwitch
      # - sloppyReassign
      # - unlabelStmt
      # - unnamedResult
      # - wrapperFunc

issues:
  exclude:
    - composite literal uses unkeyed fields
    - should have a package comment, unless it's in another file for this package

  exclude-rules:
    - path: _test\.go$|^tests/|^samples/
      linters:
        - errcheck
        - maligned
        - funlen
        - lll
        - stylecheck
    # Exclude lll issues for long lines with go:generate
  #    - linters:
  #        - lll
  #      source: "^//go:generate "
  #    - path: ^config
  #      linters:
  #        - lll

  exclude-use-default: false
  max-per-linter: 0
  max-same-issues: 0
