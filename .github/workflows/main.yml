  # **************************************************
  # -------------------- Run CI----------------------*
  # **************************************************
  run-ci:
    # Run on github Ubuntu Linux VM
    runs-on: ubuntu-latest

    steps:
      # Check out source code
      - name: Check out source code
        uses: actions/checkout@v3
      # Setup Golang-lint and run Golang-lint
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.44
      # Run UT test
      - name: Run unit test scripts
        # Recursive run all *_test.go file
        run: go test -v ./...
        
 # **************************************************
  # -------------------- Run CD----------------------*
  # **************************************************
  run-cd:
    # Depend on CI job
    needs: run-ci
    # Only run this job when trigger came from main
    if: contains('refs/heads/main;', github.ref)

    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      APPLICATION_NAME: sample-test-cicd
      DEPLOY_S3_REGION: ap-northeast-1
      DEPLOY_S3_BUCKET_NAME: bucket-for-test-cicd
      DEPLOY_GROUP: sample-test-cicd-group

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials for main
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.DEPLOY_S3_REGION}}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 1200

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name ${{env.APPLICATION_NAME}} \
            --deployment-group-name ${{env.DEPLOY_GROUP}} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
#            --s3-location bucket=${{env.DEPLOY_S3_BUCKET_NAME}},bundleType="tgz",key="${{env.APPLICATION_NAME}}/latest/sample-test-cicd.arm64.tar.gz"
